<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Temple </title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            background-color: #fff;
        }
        
        #temple.templeall {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-image: url('/api/placeholder/1200/800');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            position: relative;
        }
        
        #temple.templeall::before {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><path d="M0 0 L50 0 L50 50 L0 50 Z" fill="none" stroke="%23f0e9db" stroke-width="1"/><path d="M50 0 L100 0 L100 50 L50 50 Z" fill="none" stroke="%23f0e9db" stroke-width="1"/><path d="M0 50 L50 50 L50 100 L0 100 Z" fill="none" stroke="%23f0e9db" stroke-width="1"/><path d="M50 50 L100 50 L100 100 L50 100 Z" fill="none" stroke="%23f0e9db" stroke-width="1"/></svg>');
            background-size: 100px 100px;
            z-index: -1;
            opacity: 0.7;
        }
        
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px 0;
        }
        
        .header h1 {
            font-size: 2.5rem;
            color: #432818;
            margin-bottom: 10px;
            font-weight: bold;
        }
        
        .header p {
            font-size: 1.2rem;
            color: #6e6e6e;
        }
        
        .controls {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        button {
            padding: 8px 16px;
            background-color: #61452D;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        
        button:hover {
            background-color: #8F7052;
        }
        
        button.active {
            background-color: #4A3520;
        }
        
        .gallery-container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
        }
        
        #watthai.wat {
            position: relative;
            border-radius: 5px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
            margin-bottom: 10px;
        }
        
        #watthai.wat:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }
        
        .columns-4 #watthai.wat {
            flex: 0 0 calc(25% - 15px);
            max-width: calc(25% - 15px);
        }
        
        .columns-3 #watthai.wat {
            flex: 0 0 calc(33.333% - 14px);
            max-width: calc(33.333% - 14px);
        }
        
        .columns-2 #watthai.wat {
            flex: 0 0 calc(50% - 10px);
            max-width: calc(50% - 10px);
        }
        
        .image-container {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 100%;
            overflow: hidden;
        }
        
        #imagewatthai.imagewatthai2 {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .region-name {
            position: absolute;
            bottom: 20px;
            left: 20px;
            color: white;
            font-size: 24px;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
            z-index: 2;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            gap: 5px;
        }
        
        .pagination-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background-color: #ccc;
            cursor: pointer;
        }
        
        .pagination-dot.active {
            background-color: #61452D;
        }
        
        @media (max-width: 992px) {
            .columns-4 #watthai.wat {
                flex: 0 0 calc(33.333% - 14px);
                max-width: calc(33.333% - 14px);
            }
        }
        
        @media (max-width: 768px) {
            .columns-4 #watthai.wat,
            .columns-3 #watthai.wat {
                flex: 0 0 calc(50% - 10px);
                max-width: calc(50% - 10px);
            }
            
            .header h1 {
                font-size: 2rem;
            }
        }
        
        @media (max-width: 480px) {
            .columns-4 #watthai.wat,
            .columns-3 #watthai.wat,
            .columns-2 #watthai.wat {
                flex: 0 0 100%;
                max-width: 100%;
            }
            
            .header h1 {
                font-size: 1.8rem;
            }
            
            .region-name {
                font-size: 20px;
            }
        }
    </style>
</head>
<body>
    <div id="temple" class="templeall">
        <div class="header">
            <h1>TEMPLE BY REGION</h1>
            <p>ค้นหาข้อมูลวัดตามภูมิภาค</p>
        </div>
        
        <div class="controls">
            <div>
                <span>จำนวนคอลัมน์: </span>
                <button onclick="changeColumns(2)">2 คอลัมน์</button>
                <button onclick="changeColumns(3)">3 คอลัมน์</button>
                <button onclick="changeColumns(4)" class="active">4 คอลัมน์</button>
            </div>
            
            <div>
                <span>Auto Play: </span>
                <button onclick="toggleAutoplay(true)" class="active">เปิด</button>
                <button onclick="toggleAutoplay(false)">ปิด</button>
            </div>
        </div>
        
        <div class="gallery-container columns-4" id="gallery">
            <!-- Temple items will be inserted here by JavaScript -->
        </div>
        
        <div class="pagination" id="pagination">
            <div class="pagination-dot active" onclick="goToSlide(0)"></div>
            <div class="pagination-dot" onclick="goToSlide(1)"></div>
        </div>
    </div>

    <script>
        // Temple regions data
        const templeRegions = [
            {
                id: 1,
                name: "ภาคเหนือ",
                imageUrl: "/api/placeholder/300/300"
            },
            {
                id: 2,
                name: "ภาคกลาง",
                imageUrl: "/api/placeholder/300/300"
            },
            {
                id: 3,
                name: "ภาคตะวันออกเฉียงเหนือ",
                imageUrl: "/api/placeholder/300/300"
            },
            {
                id: 4,
                name: "ภาคตะวันตก",
                imageUrl: "/api/placeholder/300/300"
            },
            {
                id: 5,
                name: "ภาคตะวันออก",
                imageUrl: "/api/placeholder/300/300"
            },
            {
                id: 6,
                name: "ภาคใต้",
                imageUrl: "/api/placeholder/300/300"
            }
        ];
        
        let autoplayInterval;
        let isAutoplay = true;
        let currentSlide = 0;
        const slidesPerPage = 4;
        let totalPages = Math.ceil(templeRegions.length / slidesPerPage);
        
        // Initialize gallery
        function initGallery() {
            renderGallery();
            
            // Start autoplay if enabled
            if (isAutoplay) {
                startAutoplay();
            }
        }
        
        // Render gallery based on current slide
        function renderGallery() {
            const galleryContainer = document.getElementById('gallery');
            galleryContainer.innerHTML = '';
            
            const startIdx = currentSlide * slidesPerPage;
            const endIdx = Math.min(startIdx + slidesPerPage, templeRegions.length);
            
            for (let i = startIdx; i < endIdx; i++) {
                const region = templeRegions[i];
                
                const regionItem = document.createElement('div');
                regionItem.id = 'watthai';
                regionItem.className = 'wat';
                
                regionItem.innerHTML = `
                    <div class="image-container">
                        <img id="imagewatthai" class="imagewatthai2" src="${region.imageUrl}" alt="${region.name}">
                        <div class="region-name">${region.name}</div>
                    </div>
                `;
                
                galleryContainer.appendChild(regionItem);
            }
            
            // Update pagination dots
            updatePagination();
        }
        
        // Update pagination dots
        function updatePagination() {
            const pagination = document.getElementById('pagination');
            pagination.innerHTML = '';
            
            for (let i = 0; i < totalPages; i++) {
                const dot = document.createElement('div');
                dot.className = `pagination-dot ${i === currentSlide ? 'active' : ''}`;
                dot.onclick = () => goToSlide(i);
                pagination.appendChild(dot);
            }
        }
        
        // Go to specific slide
        function goToSlide(slideIndex) {
            currentSlide = slideIndex;
            renderGallery();
        }
        
        // Change number of columns
        function changeColumns(num) {
            const gallery = document.getElementById('gallery');
            gallery.className = `gallery-container columns-${num}`;
            
            // Update slidesPerPage based on columns
            slidesPerPage = num;
            totalPages = Math.ceil(templeRegions.length / slidesPerPage);
            
            // Reset to first slide when changing columns
            currentSlide = 0;
            renderGallery();
            
            // Update active button
            const buttons = document.querySelectorAll('.controls > div:first-child button');
            buttons.forEach(button => {
                button.classList.remove('active');
            });
            buttons[num - 2].classList.add('active');
        }
        
        // Toggle autoplay
        function toggleAutoplay(status) {
            isAutoplay = status;
            
            // Update active button
            const buttons = document.querySelectorAll('.controls > div:last-child button');
            buttons.forEach(button => {
                button.classList.remove('active');
            });
            buttons[status ? 0 : 1].classList.add('active');
            
            if (isAutoplay) {
                startAutoplay();
            } else {
                stopAutoplay();
            }
        }
        
        // Start autoplay
        function startAutoplay() {
            stopAutoplay(); // Clear any existing interval
            
            autoplayInterval = setInterval(() => {
                currentSlide = (currentSlide + 1) % totalPages;
                renderGallery();
            }, 3000);
        }
        
        // Stop autoplay
        function stopAutoplay() {
            if (autoplayInterval) {
                clearInterval(autoplayInterval);
            }
        }
        
        // Initialize the gallery when the page loads
        window.onload = initGallery;
    </script>
</body>
</html>
